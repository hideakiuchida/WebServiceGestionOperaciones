//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bonus.BusinessServices.WsBonusConsultaClientesCuentas {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="AppBonus", ConfigurationName="WsBonusConsultaClientesCuentas.wsselctaSoapPort")]
    public interface wsselctaSoapPort {
        
        [System.ServiceModel.OperationContractAttribute(Action="AppBonusaction/AWSSELCTA.Execute", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Bonus.BusinessServices.WsBonusConsultaClientesCuentas.ExecuteResponse Execute(Bonus.BusinessServices.WsBonusConsultaClientesCuentas.ExecuteRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="AppBonusaction/AWSSELCTA.Execute", ReplyAction="*")]
        System.Threading.Tasks.Task<Bonus.BusinessServices.WsBonusConsultaClientesCuentas.ExecuteResponse> ExecuteAsync(Bonus.BusinessServices.WsBonusConsultaClientesCuentas.ExecuteRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Liscta.LisctaItem", Namespace="AppBonus")]
    public partial class LisctaLisctaItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ctaPrsCodField;
        
        private short ctaCodField;
        
        private string ctaPrsNomField;
        
        private string pCtaAsoCodField;
        
        private string ctaAsoNomField;
        
        private string pCtaTipField;
        
        private string pCtaTipNomField;
        
        private string pCtaAutCnjField;
        
        /// <remarks/>
        public string CtaPrsCod {
            get {
                return this.ctaPrsCodField;
            }
            set {
                this.ctaPrsCodField = value;
                this.RaisePropertyChanged("CtaPrsCod");
            }
        }
        
        /// <remarks/>
        public short CtaCod {
            get {
                return this.ctaCodField;
            }
            set {
                this.ctaCodField = value;
                this.RaisePropertyChanged("CtaCod");
            }
        }
        
        /// <remarks/>
        public string CtaPrsNom {
            get {
                return this.ctaPrsNomField;
            }
            set {
                this.ctaPrsNomField = value;
                this.RaisePropertyChanged("CtaPrsNom");
            }
        }
        
        /// <remarks/>
        public string PCtaAsoCod {
            get {
                return this.pCtaAsoCodField;
            }
            set {
                this.pCtaAsoCodField = value;
                this.RaisePropertyChanged("PCtaAsoCod");
            }
        }
        
        /// <remarks/>
        public string CtaAsoNom {
            get {
                return this.ctaAsoNomField;
            }
            set {
                this.ctaAsoNomField = value;
                this.RaisePropertyChanged("CtaAsoNom");
            }
        }
        
        /// <remarks/>
        public string PCtaTip {
            get {
                return this.pCtaTipField;
            }
            set {
                this.pCtaTipField = value;
                this.RaisePropertyChanged("PCtaTip");
            }
        }
        
        /// <remarks/>
        public string PCtaTipNom {
            get {
                return this.pCtaTipNomField;
            }
            set {
                this.pCtaTipNomField = value;
                this.RaisePropertyChanged("PCtaTipNom");
            }
        }
        
        /// <remarks/>
        public string PCtaAutCnj {
            get {
                return this.pCtaAutCnjField;
            }
            set {
                this.pCtaAutCnjField = value;
                this.RaisePropertyChanged("PCtaAutCnj");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="wsselcta.Execute", WrapperNamespace="AppBonus", IsWrapped=true)]
    public partial class ExecuteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="AppBonus", Order=0)]
        public string Ctaprscod;
        
        public ExecuteRequest() {
        }
        
        public ExecuteRequest(string Ctaprscod) {
            this.Ctaprscod = Ctaprscod;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="wsselcta.ExecuteResponse", WrapperNamespace="AppBonus", IsWrapped=true)]
    public partial class ExecuteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="AppBonus", Order=0)]
        public short Coderror;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="AppBonus", Order=1)]
        public string Msjerror;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="AppBonus", Order=2)]
        public short Cantidadcta;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="AppBonus", Order=3)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Bonus.BusinessServices.WsBonusConsultaClientesCuentas.LisctaLisctaItem[] Carritocta;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="AppBonus", Order=4)]
        public string Prsnomape;
        
        public ExecuteResponse() {
        }
        
        public ExecuteResponse(short Coderror, string Msjerror, short Cantidadcta, Bonus.BusinessServices.WsBonusConsultaClientesCuentas.LisctaLisctaItem[] Carritocta, string Prsnomape) {
            this.Coderror = Coderror;
            this.Msjerror = Msjerror;
            this.Cantidadcta = Cantidadcta;
            this.Carritocta = Carritocta;
            this.Prsnomape = Prsnomape;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface wsselctaSoapPortChannel : Bonus.BusinessServices.WsBonusConsultaClientesCuentas.wsselctaSoapPort, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class wsselctaSoapPortClient : System.ServiceModel.ClientBase<Bonus.BusinessServices.WsBonusConsultaClientesCuentas.wsselctaSoapPort>, Bonus.BusinessServices.WsBonusConsultaClientesCuentas.wsselctaSoapPort {
        
        public wsselctaSoapPortClient() {
        }
        
        public wsselctaSoapPortClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public wsselctaSoapPortClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsselctaSoapPortClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsselctaSoapPortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Bonus.BusinessServices.WsBonusConsultaClientesCuentas.ExecuteResponse Bonus.BusinessServices.WsBonusConsultaClientesCuentas.wsselctaSoapPort.Execute(Bonus.BusinessServices.WsBonusConsultaClientesCuentas.ExecuteRequest request) {
            return base.Channel.Execute(request);
        }
        
        public short Execute(string Ctaprscod, out string Msjerror, out short Cantidadcta, out Bonus.BusinessServices.WsBonusConsultaClientesCuentas.LisctaLisctaItem[] Carritocta, out string Prsnomape) {
            Bonus.BusinessServices.WsBonusConsultaClientesCuentas.ExecuteRequest inValue = new Bonus.BusinessServices.WsBonusConsultaClientesCuentas.ExecuteRequest();
            inValue.Ctaprscod = Ctaprscod;
            Bonus.BusinessServices.WsBonusConsultaClientesCuentas.ExecuteResponse retVal = ((Bonus.BusinessServices.WsBonusConsultaClientesCuentas.wsselctaSoapPort)(this)).Execute(inValue);
            Msjerror = retVal.Msjerror;
            Cantidadcta = retVal.Cantidadcta;
            Carritocta = retVal.Carritocta;
            Prsnomape = retVal.Prsnomape;
            return retVal.Coderror;
        }
        
        public System.Threading.Tasks.Task<Bonus.BusinessServices.WsBonusConsultaClientesCuentas.ExecuteResponse> ExecuteAsync(Bonus.BusinessServices.WsBonusConsultaClientesCuentas.ExecuteRequest request) {
            return base.Channel.ExecuteAsync(request);
        }
    }
}
